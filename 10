#include <iostream>
#include <stack>
#include <string>

using namespace std;

bool checkParentheses(const string& str) {
    stack<char> s;

    for (int i = 0; i < str.size(); ++i) {
        if (str[i] == '(' || str[i] == '[' || str[i] == '{') {
            s.push(str[i]);
        }
        else if (str[i] == ')' || str[i] == ']' || str[i] == '}') {
            if (s.empty()) {
                cout << "Unmatched closing parenthesis at position " << i << endl;
                return false;
            }

            char top = s.top();
            s.pop();

            if ((str[i] == ')' && top != '(') || (str[i] == ']' && top != '[') || (str[i] == '}' && top != '{')) {
                cout << "Mismatched parenthesis at position " << i << endl;
                return false;
            }
        }
    }

    if (!s.empty()) {
        cout << "Unmatched opening parenthesis at position " << str.size() - 1 << endl;
        return false;
    }

    return true;
}

int main() {
    string expression;
    cout << "Enter a string with parentheses: ";
    getline(cin, expression);

    if (checkParentheses(expression)) {
        cout << "The string contains correctly positioned parentheses." << endl;
    }
    else {
        cout << "The string contains incorrectly positioned parentheses." << endl;
    }
}
